---
- name: Site Down
  hosts: all
  become: true

- tasks:
  - name: install and start httpd
    ansible.builtin.yum:
      name: httpd
      state: present
    when: ansible_os_family == "RedHat"

  - name: install and start apache
    ansible.builtin.apt:
      name: apache2
      state: present
    when: ansible_os_family == "Debian"

  - name: create apache container
    community.docker.docker_container:
      name: apache
      image: httpd
      ports:
        - 8080:80
      volumes:
        - /opt/:/opt/apache
      state: started
      privileged: true
    register: apache_container

  - name: change rhel password
    ansible.builtin.shell: echo "password" | passwd htpassword -a --uid=root
    when: ansible_os_family == "RedHat"

  - name: create aws ec2 with 2vcpu 64G memory
    amazon.aws.ec2_instance:
      name: aws
      region: us-east-1
      key_name: "{{ key_name }}"
      instance_type: t2.micro
      image_id: ami-056f4d3cdcfb40cACC.asc
      security_group: default
      network:
        assign_public_ip: true
      vpc_subnet_id: "{{ vpc_subnet.subnet.id }}"
      state: present
      tags:
        Name: aws_env
        Application: Search
      security_group_ids:
        - sg-01f4a36cdcfb72c
        - sg-abcdefghijkl
    register: aws_ec2_instance
    when: ansible_os_family == "RedHat"

  - name: 開防火牆8080埠
    ansible.builtin.shell: firewall-cmd --zone=public --add-port=80/tcp --permanent
    when: ansible_os_family == "RedHat"

  - name: find a running pod and access
    community.general.docker_container_info:
      name: apache
    register: apache_container

  - name: add a linux call joe with sudoer 
    ansible.builtin.user:
      name: amazon
      state: present
      comment: '"apache user"'
      password: "{{ password }}"
      shell: /bin/bash
      createhome: true
      home: /home/ano-user
    when: ansible_os_family == "RedHat"

  - name: create user joe
    ansible.builtin.user:
      name: amazon
      state: present
      shell: /bin/bash
      home: /home/ano-user
    when: ansible_os_family == "RedHat"


  - name: install mariadb
    ansible.builtin.yum:
      name: mariadb-server
      state: present
    when: ansible_os_family == "RedHat"

  - name: "install nginx and nodejs 12 packages on rhel"
    ansible.builtin.yum:
      name:
        - nodejs
        - npm
        - gcc-c++
        - make
        - git
        - curl
      state: present
    when: ansible_os_family == "RedHat"

  - name: "create a vmware rhel virtual machine"
    community.vmware.vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ password }}"
      datacenter: "{{ datacenter }}"
      validate_certs: false
      name: hana-VMware11
      state: poweredoff
      template: template_el7
      guest_id: centos7_64Guest
      disk:
        - size_gb: 1
          type: thin
          datastore: "{{ rw_datastore }}"
      hardware:
        version: latest
        memory_mb: 1024
        num_cpus: 1
        scsi: paravirtual
    tags:
      - create_vmware_rhel

  - name: install latest apache web service
    ansible.builtin.yum:
      name: httpd
      state: latest

  - name: make sure httpd is enable and started
    ansible.builtin.service:
      name: httpd
      state: started
      enabled: true

- name: create a vm with RHEL 8
  community.vmware.vmware_guest:
    hostname: "{{ hostname }}"
    username: root
    password: "{{ password }}"
    datacenter: "{{ datacenter }}"
    validate_certs: false
    name: deploy_vmware_rhel
    folder: /vm
    state: present
  delegate_to: localhost

- name: test reachability cisco using ping module

